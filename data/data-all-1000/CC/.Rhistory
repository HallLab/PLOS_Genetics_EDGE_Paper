print(AvgP_by_SS)
AvgP_by_SS <- by(AvgP, AvgP$Samp_Size, function(x) summary(lm(Avg_pval ~ MAF + Encoding, data = x)))
print(AvgP_by_SS)
AvgP_by_SS <- by(AvgP, AvgP$Samp_Size, function(x) summary(anova(lm(Avg_pval ~ MAF + Encoding, data = x))))
print(AvgP_by_SS)
AvgP_by_SS <- by(AvgP, AvgP$Samp_Size, function(x) anova(lm(Avg_pval ~ MAF + Encoding, data = x)))
print(AvgP_by_SS)
head(AvgP)
AvgP_by_M_E <- by(AvgP, AvgP$Model, AvgP$Encoding, function(x) anova(lm(Avg_pval ~ MAF + Samp_Size, data = x)))
?by
AvgP_by_M_E <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x) anova(lm(Avg_pval ~ MAF + Samp_Size, data = x)))
print(AvgP_by_M_E)
AvgP$CC_Ratio_cat <- as.factor(AvgP$CC_Ratio)
head(AvgP)
lm(data=AvgP, Avg_pval ~ CC)
lm(data=AvgP, Avg_pval ~ CC_Ratiosummary())
summary(lm(data=AvgP, Avg_pval ~ CC_Ratio))
summary(lm(data=AvgP, Avg_pval ~ CC_Ratio_cat))
anova(lm(data=AvgP, Avg_pval ~ CC_Ratio_cat))
anova(lm(data=AvgP, Avg_pval ~ CC_Ratio))
amod <- anova(lm(data=AvgP, Avg_pval ~ CC_Ratio_cat))
names(amod)
amod$Df
amod$Pr(>F)
amod$"Pr(>F)"
amod <- anova(lm(data=AvgP, Avg_pval ~ CC_Ratio_cat + MAF))
amod
amod$"Pr(>F)"
AvgP$CC_Ratio_cat <- as.factor(AvgP$CC_Ratio)
AvgP$Baseline_cat <- as.factor(AvgP$Baseline)
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x) anova(lm(Avg_pval ~ MAF + Samp_Size, data = x)))
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x) anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline + CC_Ratio, data = x)))
head(AvgP_by_Model_Encoding)
AvgP_by_Model_Encoding <- by(AvgP, AvgP$Model, function(x) anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline + CC_Ratio, data = x)))
head(AvgP_by_Model_Encoding)
AvgP_by_M_E <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x) anova(lm(Avg_pval ~ MAF + Samp_Size, data = x)))
head(AvgP_by_Model_Encoding)
head(AvgP_by_M_E)
AvgP_by_M_E <- by(AvgP, AvgP$Model, AvgP$Encoding, function(x) anova(lm(Avg_pval ~ MAF + Samp_Size, data = x)))
AvgP_by_M_E <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x) anova(lm(Avg_pval ~ MAF + Samp_Size, data = x)))
head(AvgP_by_M_E)
AvgP_by_Model_Encoding <- by(AvgP, AvgP$Model, function(x) anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline + CC_Ratio, data = x)))
head(AvgP_by_Model_Encoding)
AvgP_by_M_E <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x) anova(lm(Avg_pval ~ MAF + Samp_Size, data = x)))
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x) anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline + CC_Ratio, data = x)))
head(AvgP_by_Model_Encoding)
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x) anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x)))
head(AvgP_by_Model_Encoding)
?by
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x) summary(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x)))
head(AvgP_by_Model_Encoding)
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x) anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x)))
head(AvgP_by_Model_Encoding)
names(AvgP_by_Model_Encoding)
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(c(unique(x$Model), unique(x$Encoding), anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)")))
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(c(unique(x$Model), unique(x$Encoding), anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))})
print(AvgP_by_Model_Encoding)
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(cbind(unique(x$Model), unique(x$Encoding), anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))})
head(AvgP_by_Model_Encoding)
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(rbind(unique(x$Model), unique(x$Encoding), anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))})
head(AvgP_by_Model_Encoding)
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(c(unique(x$Model), unique(x$Encoding), anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))})
head(AvgP_by_Model_Encoding)
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(data.frame(unique(x$Model), unique(x$Encoding), anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))})
head(AvgP_by_Model_Encoding)
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(c(unique(x$Model), unique(x$Encoding), anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))})
head(AvgP_by_Model_Encoding)
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(data.frame(unique(x$Model), unique(x$Encoding), data.frame(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)")))})
head(AvgP_by_Model_Encoding)
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(c(unique(x$Model), unique(x$Encoding), anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))})
head(AvgP_by_Model_Encoding)
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(c(unique(x$Model), unique(x$Encoding), anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)")))
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(c(unique(x$Model), unique(x$Encoding), anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))})
head(AvgP_by_Model_Encoding)
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(cbind(unique(x$Model), unique(x$Encoding), anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))})
head(AvgP_by_Model_Encoding)
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(rbind(unique(x$Model), unique(x$Encoding), anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))})
head(AvgP_by_Model_Encoding)
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(data.frame(unique(x$Model), unique(x$Encoding), data.frame(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)")))})
head(AvgP_by_Model_Encoding)
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(c(data.frame(unique(x$Model), unique(x$Encoding), data.frame(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)")))}))
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(c(data.frame(unique(x$Model), unique(x$Encoding), data.frame(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))))})
head(AvgP_by_Model_Encoding)
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(data.frame(c(unique(x$Model), unique(x$Encoding), data.frame(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))))})
head(AvgP_by_Model_Encoding)
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(data.frame(unique(x$Model), unique(x$Encoding), data.frame(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)")))})
head(AvgP_by_Model_Encoding)
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(data.frame(unique(x$Model), unique(x$Encoding), data.frame(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x)),$"Pr(>F)")))})
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(data.frame(unique(x$Model), unique(x$Encoding), (anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)")))})
head(AvgP_by_Model_Encoding)
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(c(data.frame(unique(x$Model), unique(x$Encoding),(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))))})
head(AvgP_by_Model_Encoding)
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(data.framec((unique(x$Model), unique(x$Encoding),(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))))})
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(data.frame(c(unique(x$Model), unique(x$Encoding),(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))))})
head(AvgP_by_Model_Encoding)
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(data.frame(c(x$Model, x$Encoding,(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))))})
head(AvgP_by_Model_Encoding)
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(data.frame(c(x$Model, x$Encoding,(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))))})
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(data.frame(c(unique(x$Model), unique(x$Encoding),(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))))})
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(data.frame(unique(x$Model), unique(x$Encoding), data.frame(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$”Pr(>F)”)))})
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(data.frame(unique(x$Model), unique(x$Encoding), data.frame(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$”Pr(>F)”)))})
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(c(unique(x$Model), unique(x$Encoding), anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$”Pr(>F)”))})
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x) anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x)))
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(c(unique(x$Model), unique(x$Encoding), anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)")))
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(c(unique(x$Model), unique(x$Encoding), anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))})
head(AvgP_by_Model_Encoding)
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(c(unique(x$Model), unique(x$Encoding), anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))})
head(AvgP_by_Model_Encoding)
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(c(unique(x$Model), unique(x$Encoding), anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))})
head(AvgP_by_Model_Encoding)
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(c(unique(x$Model), unique(x$Encoding), anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))})
head(AvgP_by_Model_Encoding)
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(data.frame(unique(x$Model), unique(x$Encoding), data.frame(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$”Pr(>F)”)))})
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(rbind(unique(x$Model), unique(x$Encoding), anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))})
head(AvgP_by_Model_Encoding)
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(c(unique(x$Model), unique(x$Encoding), anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))})
head(AvgP_by_Model_Encoding)
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(rbind(unique(x$Model), unique(x$Encoding), anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))})
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(cbind(unique(x$Model), unique(x$Encoding), anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))})
head(AvgP_by_Model_Encoding)
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(data.frame(unique(x$Model), unique(x$Encoding), data.frame(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$”Pr(>F)”)))})
AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(data.frame(unique(x$Model), unique(x$Encoding), data.frame(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$”Pr(>F)”)))})
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(data.frame(unique(x$Model), unique(x$Encoding), data.frame(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)")))})
head(AvgP_by_Model_Encoding)
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(data.frame(unique(x$Model), unique(x$Encoding), (anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)")))})
head(AvgP_by_Model_Encoding)
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(data.frame(c(unique(x$Model), unique(x$Encoding), data.frame(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)")))})
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(data.frame(c(unique(x$Model), unique(x$Encoding), data.frame(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))))})
head(AvgP_by_Model_Encoding)
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(data.frame(c(unique(x$Model), unique(x$Encoding), (anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))))})
head(AvgP_by_Model_Encoding)
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(data.frame(unique(x$Model), unique(x$Encoding), (anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)")))})
head(AvgP_by_Model_Encoding)
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(c(unique(x$Model), unique(x$Encoding), (anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)")))})
head(AvgP_by_Model_Encoding)
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(data.frame(c(unique(x$Model), unique(x$Encoding), (anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))))})
head(AvgP_by_Model_Encoding)
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(data.frame(c(unique(x$Model), unique(x$Encoding), data.frame(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)")))})
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(data.frame(c(unique(x$Model), unique(x$Encoding), data.frame(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))))})
head(AvgP_by_Model_Encoding)
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(c(unique(x$Model), unique(x$Encoding), (anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)")))})
head(AvgP_by_Model_Encoding)
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(c(unique(x$Model), unique(x$Encoding), data.frame(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))))})
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(c(unique(x$Model), unique(x$Encoding), data.frame(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)")))})
head(AvgP_by_Model_Encoding)
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(data.frame(unique(x$Model), unique(x$Encoding), c(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)")))})
head(AvgP_by_Model_Encoding)
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(c(unique(x$Model), unique(x$Encoding), c(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)")))})
head(AvgP_by_Model_Encoding)
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(c(unique(x$Model), unique(x$Encoding), (anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)")))})
head(AvgP_by_Model_Encoding)
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(c(x$Model, x$Encoding, (anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)")))})
head(AvgP_by_Model_Encoding)
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(c(unique(x$Model), unique(x$Encoding), c(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)")))})
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(c(unique(x$Model), unique(x$Encoding), (anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)")))})
head(AvgP_by_Model_Encoding)
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(cbind(unique(x$Model), unique(x$Encoding), (anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)")))})
head(AvgP_by_Model_Encoding)
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(data.frame(cbind(unique(x$Model), unique(x$Encoding), (anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))))})
head(AvgP_by_Model_Encoding)
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x) rbind(unique(x$Model), unique(x$Encoding), (anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))))})
head(AvgP_by_Model_Encoding)
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(cbind(unique(x$Model), unique(x$Encoding), (anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)")))})
head(AvgP_by_Model_Encoding)
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(rbind(unique(x$Model), unique(x$Encoding), (anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)")))})
head(AvgP_by_Model_Encoding)
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(unique(x$Model), unique(x$Encoding), rbind(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)"))})
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(unique(x$Model), unique(x$Encoding), data.frame(rbind(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)")))})
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(data.frame(unique(x$Model), unique(x$Encoding), rbind(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)")))})
head(AvgP_by_Model_Encoding)
head(unlist(AvgP_by_Model_Encoding))
head(rbind(AvgP_by_Model_Encoding))
head(cbind(AvgP_by_Model_Encoding))
 AvgP_by_Model_Encoding <- by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(data.frame(unique(x$Model), unique(x$Encoding), rbind(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)")))})
head(AvgP_by_Model_Encoding)
head(do.call("rbind",AvgP_by_Model_Encoding))
 AvgP_by_Model_Encoding <- do.call("rbind",by(AvgP, list(AvgP$Model, AvgP$Encoding), function(x){ return(data.frame(unique(x$Model), unique(x$Encoding), rbind(anova(lm(Avg_pval ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)")))}))
head(AvgP_by_Model_Encoding)
rename(AvgP_by_Model_Encoding, c("X1="MAF", "X2"="Samp_Size"))
rename(AvgP_by_Model_Encoding, c("X1"="MAF", "X2"="Samp_Size"))
names(AvgP_by_Model_Encoding)[names(AvgP_by_Model_Encoding)=="X1" <- "MAF"
names(AvgP_by_Model_Encoding)[names(AvgP_by_Model_Encoding)=="X1"] <- "MAF"
head(AvgP_by_Model_Encoding)
names(AvgP_by_Model_Encoding)[names(AvgP_by_Model_Encoding)=="X2","X3"] <- "Samp_Size","Baseline"
names(AvgP_by_Model_Encoding)[names(AvgP_by_Model_Encoding)=="X2",] <- "Samp_Size"
names(AvgP_by_Model_Encoding)[names(AvgP_by_Model_Encoding)=="X2"] <- "Samp_Size"
names(AvgP_by_Model_Encoding)[names(AvgP_by_Model_Encoding)=="X3"] <- "Baseline"
names(AvgP_by_Model_Encoding)[names(AvgP_by_Model_Encoding)=="X4"] <- "CC_Ratio"
head(AvgP_by_Model_Encoding)
write.csv(AvgP_by_Model_Encoding, file = "Avg_P_by_Model_Encoding.csv")
read.csv("Avg_P_by_Model_Encoding.csv")
q()
Power <- read.table("Average_pval.txt", header=T)
Power$CC_Ratio_cat <- as.factor(Power$CC_Ratio)
Power$Baseline_cat <- as.factor(Power$Baseline)
Power_by_Model_Encoding <- do.call("rbind",by(Power, list(Power$Model, {Power$Encoding), function(x){ return(data.frame(unique(x$Model), unique(x$Encoding), rbind(anova(lm(
head(Power)
Power_by_Model_Encoding <- do.call("rbind",by(Power, list(Power$Model, {Power$Encoding), function(x){ return(data.frame(unique(x$Model), unique(x$Encoding), rbind(anova(lm(Power ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)")))}))
Power_by_Model_Encoding <- do.call("rbind",by(Power, list(Power$Model, Power$Encoding), function(x){ return(data.frame(unique(x$Model), unique(x$Encoding), rbind(anova(lm(Power ~ MAF + Samp_Size + Baseline_cat + CC_Ratio_cat, data = x))$"Pr(>F)")))}))
head(Power_by_Model_Encoding)
 names(Power_by_Model_Encoding)[names(Power_by_Model_Encoding)=="X1"] <- "MAF"
 names(Power_by_Model_Encoding)[names(Power_by_Model_Encoding)=="X2"] <- "Samp_Size"
 names(Power_by_Model_Encoding)[names(Power_by_Model_Encoding)=="X3"] <- "Baseline"
 names(Power_by_Model_Encoding)[names(Power_by_Model_Encoding)=="X4"] <- "CC_Ratio"
head(Power_by_Model_Encoding)
 write.csv(Power_by_Model_Encoding, file = "Power_by_Model_Encoding.csv")
q()
cc_interact <-read.table("MAF50_10000_CC1_BL25_Interacting.txt", header=T)
cc_interact$Model <- gsub("_x_", " x ", cc_interact$Model)
cc_interact$Model <- factor(cc_interact$Model, c("REC x REC", "REC x SUB", "REC x "ADD", "SUP x REC", "REC x DOM", "ADD x SUB", "ADD x ADD", "SUP x ADD", "SUB x SUB", "SUP x SUB", "SUP x SUP", "SUP x DOM", "ADD x DOM", "SUP x DOM", "DOM x DOM", "REC x HET", "HET x SUB", "ADD x HET", "SUP x HET", HET x DOM", "HET x HET", "HR-HR", "HR-HET", "HR-HA", "HET-HET", "HET-HA", "Hyp", "RHyp", "XOR"))
summary(cc_interact)
print(cc_interact)
cc_interact <-read.table("MAF50_10000_CC1_BL25_Interacting.txt", header=T)
cc_interact$Model <- gsub("_x_", " x ", cc_interact$Model)
print(cc_interact)
cc_interact$Model <- factor(cc_interact$Model, c("REC x REC", "REC x SUB", "REC x ADD", "SUP x REC", "REC x DOM", "ADD x SUB", "ADD x ADD", "SUP x ADD", "SUB x SUB", "SUP x SUB", "SUP x SUP", "SUP x DOM", "ADD x DOM", "SUP x DOM", "DOM x DOM", "REC x HET", "HET x SUB", "ADD x HET", "SUP x HET", HET x DOM", "HET x HET", "HR-HR", "HR-HET", "HR-HA", "HET-HET", "HET-HA", "Hyp", "RHyp", "XOR"))
cc_interact$Model <- gsub("_x_", " x ", cc_interact$Model)
cc_interact <-read.table("MAF50_10000_CC1_BL25_Interacting.txt", header=T)
cc_interact$Model <- gsub("_x_", " x ", cc_interact$Model)
cc_interact$Model <- factor(cc_interact$Model, c("REC x REC", "REC x SUB", "REC x ADD", "SUP x REC", "REC x DOM", "ADD x SUB", "ADD x ADD", "SUP x ADD", "SUB x SUB", "SUP x SUB", "SUP x SUP", "SUP x DOM", "ADD x DOM", "SUP x DOM", "DOM x DOM", "REC x HET", "HET x SUB", "ADD x HET", "SUP x HET", HET x DOM", "HET x HET", "HR-HR", "HR-HET", "HR-HA", "HET-HET", "HET-HA", "Hyp", "RHyp", "XOR"))
print(cc_interact)
cc_interact$Model <- factor(cc_interact$Model, c("REC x REC", "REC x SUB", "REC x ADD", "SUP x REC", "REC x DOM", "ADD x SUB", "ADD x ADD", "SUP x ADD", "SUB x SUB", "SUP x SUB", "SUP x SUP", "SUP x DOM", "ADD x DOM", "SUP x DOM", "DOM x DOM", "REC x HET", "HET x SUB", "ADD x HET", "SUP x HET", HET x DOM", "HET x HET", "HR-HR", "HR-HET", "HR-HA", "HET-HET", "HET-HA", "Hyp", "RHyp", "XOR"))
cc_interact <-read.table("MAF50_2000_CC1_BL25_Interacting.txt", header=T)
cc_interact$Model <- gsub("_x_", " x ", cc_interact$Model)
print(cc_interact)
cc_interact$Model <- factor(cc_interact$Model, c("REC x REC", "REC x SUB", "REC x ADD", "SUP x REC", "REC x DOM", "ADD x SUB", "ADD x ADD", "SUP x ADD", "SUB x SUB", "SUP x SUB", "SUP x SUP", "SUP x DOM", "ADD x DOM", "SUP x DOM", "DOM x DOM", "REC x HET", "HET x SUB", "ADD x HET", "SUP x HET", HET x DOM", "HET x HET", "HR-HR", "HR-HET", "HR-HA", "HET-HET", "HET-HA", "Hyp", "RHyp", "XOR"))
print(cc_interact)
cc_interact$Model <- factor(cc_interact$Model, c("REC x REC", "REC x SUB", "REC x ADD", "SUP x REC", "REC x DOM", "ADD x SUB", "ADD x ADD", "SUP x ADD", "SUB x SUB", "SUP x SUB", "SUP x SUP", "SUP x DOM", "ADD x DOM", "SUP x DOM", "DOM x DOM", "REC x HET", "HET x SUB", "ADD x HET", "SUP x HET", HET x DOM", "HET x HET", "HR-HR", "HR-HET", "HR-HA", "HET-HET", "HET-HA", "Hyp", "RHyp", "XOR"))
cc_interact <-read.table("MAF50_2000_CC1_BL25_Interacting.txt", header=T)
cc_interact$Model <- gsub("_x_", " x ", cc_interact$Model)
cc_interact$Model <- factor(cc_interact$Model, c("HR-HR", "HR-HET", "HR-HA", "HET-HET", "HET-HA", "Hyp", "RHyp", "XOR"))
print(cc_interact)
cc_interact <-read.table("MAF50_2000_CC1_BL25_Interacting.txt", header=T)
print(cc_interact)
cc_interact$Model <- factor(cc_interact$Model, c("REC_x_REC", "XOR"))
print(cc_interact)
cc_interact <-read.table("MAF50_2000_CC1_BL25_Interacting.txt", header=T)
cc_interact$Model <- factor(cc_interact$Model, c("REC_x_REC", "REC_x_SUB", "REC_x_ADD", "SUP_x_REC", "REC_x_DOM", "ADD_x_SUB", "ADD_x_ADD", "SUP_x_ADD", "SUB_x_SUB", "SUP_x_SUB", "SUP_x_SUP", "SUP_x_DOM", "ADD_x_DOM", "SUP_x_DOM", "DOM_x_DOM", "REC_x_HET", "HET_x_SUB", "ADD_x_HET", "SUP_x_HET", HET_x_DOM", "HET_x_HET", "HR-HR", "HR-HET", "HR-HA", "HET-HET", "HET-HA", "Hyp", "RHyp", "XOR"))
cc_interact$Model <- factor(cc_interact$Model, c("REC_x_REC", "XOR"))
cc_interact$Model <- gsub("_x_", " x ", cc_interact$Model)
print(cc_interact)
cc_interact <-read.table("MAF50_2000_CC1_BL25_Interacting.txt", header=T)
cc_interact$Model <- factor(cc_interact$Model, c("REC_x_REC", "REC_x_SUB", "REC_x_ADD", "SUP_x_REC", "REC_x_DOM", "ADD_x_SUB", "ADD_x_ADD", "SUP_x_ADD", "SUB_x_SUB", "SUP_x_SUB", "SUP_x_SUP", "SUP_x_DOM", "ADD_x_DOM", "SUP_x_DOM", "DOM_x_DOM", "REC_x_HET", "HET_x_SUB", "ADD_x_HET", "SUP_x_HET", HET_x_DOM", "HET_x_HET", "HR-HR", "HR-HET", "HR-HA", "HET-HET", "HET-HA", "Hyp", "RHyp", "XOR"))
print(cc_interact)
cc_interact$Model <- factor(cc_interact$Model, c("REC_x_REC", "REC_x_SUB", "REC_x_ADD", "HR-HR", "HR-HET", "HR-HA", "HET-HET", "HET-HA", "Hyp", "RHyp", "XOR"))
print(cc_interact)
cc_interact$Model <- factor(cc_interact$Model, c("REC_x_REC", "ADD_x_HET", "SUP_x_HET", HET_x_DOM", "HET_x_HET", "HR-HR", "HR-HET", "HR-HA", "HET-HET", "HET-HA", "Hyp", "RHyp", "XOR"))
cc_interact <-read.table("MAF50_2000_CC1_BL25_Interacting.txt", header=T)
cc_interact$Model <- factor(cc_interact$Model, c("REC_x_REC", "ADD_x_HET", "SUP_x_HET", HET_x_DOM", "HET_x_HET", "HR-HR", "HR-HET", "HR-HA", "HET-HET", "HET-HA", "Hyp", "RHyp", "XOR"))
cc_interact <-read.table("MAF50_2000_CC1_BL25_Interacting.txt", header=T)
cc_interact$Model <- factor(cc_interact$Model, levels=c("REC_x_REC", "REC_x_SUB", "REC_x_ADD", "SUP_x_REC", "REC_x_DOM", "ADD_x_SUB", "ADD_x_ADD", "SUP_x_ADD", "SUB_x_SUB", "SUP_x_SUB", "SUP_x_SUP", "SUP_x_DOM", "ADD_x_DOM", "SUP_x_DOM", "DOM_x_DOM", "REC_x_HET", "HET_x_SUB", "ADD_x_HET", "SUP_x_HET", HET_x_DOM", "HET_x_HET", "HR-HR", "HR-HET", "HR-HA", "HET-HET", "HET-HA", "Hyp", "RHyp", "XOR"))
cc_interact$Model <- factor(cc_interact$Model, levels=c(REC_x_REC, REC_x_SUB, REC_x_ADD, "SUP_x_REC", "REC_x_DOM", "ADD_x_SUB", "ADD_x_ADD", "SUP_x_ADD", "SUB_x_SUB", "SUP_x_SUB", "SUP_x_SUP", "SUP_x_DOM", "ADD_x_DOM", "SUP_x_DOM", "DOM_x_DOM", "REC_x_HET", "HET_x_SUB", "ADD_x_HET", "SUP_x_HET", HET_x_DOM", "HET_x_HET", "HR-HR", "HR-HET", "HR-HA", "HET-HET", "HET-HA", "Hyp", "RHyp", "XOR"))
?factor
cc_interact <-read.table("MAF50_10000_CC1_BL25_Interacting.txt", header=T)
> cc_interact$Model <- gsub("_x_", " x ", cc_interact$Model)
 cc_interact$Model <- gsub("_x_", " x ", cc_interact$Model)
cc_interact$Model <- factor(cc_interact$Model, c("REC x REC", "REC x SUB", "REC x "ADD", "SUP x REC", "REC x DOM", "ADD x SUB", "ADD x ADD", "SUP x ADD", "SUB x SUB", "SUP x SUB", "SUP x SUP", "SUP x DOM", "ADD x DOM", "SUP x DOM", "DOM x DOM", "REC x HET", "HET x SUB", "ADD x HET", "SUP x HET", HET x DOM", "HET x HET", "HR-HR", "HR-HET", "HR-HA", "HET-HET", "HET-HA", "Hyp", "RHyp", "XOR"))
print(cc_interact)
png("cc_interact_50_20k.png")
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue')
library(ggplot2)
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue')
p
dev.off()
ll
q()
cc_interact <- read.table("MAF30_2000_CC1_BL25_Interacting.txt")
cc_interact$Encoding <- as.factor(cc_interact$Encoding)
cc_interact <- read.table("MAF30_2000_CC1_BL25_Interacting.txt")
cc_interact$Model <- factor(cc_interact$Model, levels(cc_interact$Model)[rev(c(19, 20, 16, 26, 17, 4, 1, 23, 22, 27, 28, 6, 2, 24, 5, 18, 11, 3, 25, 9, 10, 14, 13, 12, 8, 7, 15, 21, 29))])
png("cc_interact_30_2k_4.png")
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue')
library(ggplot2)
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue')
p
cc_interact <- read.table("MAF30_2000_CC1_BL25_Interacting.txt", header=T)
cc_interact$Model <- factor(cc_interact$Model, levels(cc_interact$Model)[rev(c(19, 20, 16, 26, 17, 4, 1, 23, 22, 27, 28, 6, 2, 24, 5, 18, 11, 3, 25, 9, 10, 14, 13, 12, 8, 7, 15, 21, 29))])
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue')
p
dev.off()
cc_interact <- read.table("MAF30_2000_CC1_BL25_Interacting.txt", header=T)
cc_interact$Model <- factor(cc_interact$Model, levels(cc_interact$Model)[rev(c(19, 20, 16, 26, 17, 4, 1, 23, 22, 27, 28, 6, 2, 24, 5, 18, 11, 3, 25, 9, 10, 14, 13, 12, 8, 7, 15, 21, 29))])
cc_interact$Encoding <- as.factor(cc_interact$Encoding)
cc_interact$Encoding <- factor(cc_interact$Encoding, levels(cc_interact$Encoding[c(1,3,4,2,5)]))
png("cc_interact_30_2k_TEST.png")
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue')
p
dev.off()
print(cc_interact)
cc_interact <- read.table("MAF30_2000_CC1_BL25_Interacting.txt", header=T)
print(cc_interact)
cc_interact$Model <- factor(cc_interact$Model, levels(cc_interact$Model)[rev(c(19, 20, 16, 26, 17, 4, 1, 23, 22, 27, 28, 6, 2, 24, 5, 18, 11, 3, 25, 9, 10, 14, 13, 12, 8, 7, 15, 21, 29))])
cc_interact$Encoding <- as.factor(cc_interact$Encoding)
cc_interact$Encoding <- factor(cc_interact$Encoding, levels(cc_interact$Encoding[c(1,3,4,2,5)]))
head(cc_interact)
levels(cc_interact$Encoding)
levels(cc_interact$Model)
cc_interact$Encoding <- factor(cc_interact$Encoding, levels(cc_interact$Encoding)[c(1,3,4,2,5)])
levels(cc_interact$Model)
levels(cc_interact$Encoding)
png("cc_interact_30_2k_TEST.png")
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue')
p
dev.off()
png("cc_interact_30_2k_TEST.png")
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue')
p + geom_hline(yintercept=8.5) +
geom_hline(yintercept=14.5, linetype="dashed")
p
dev.off()
png("cc_interact_30_2k_TEST.png")
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue')
p + geom_hline(yintercept=8.5) +
geom_hline(yintercept=14.5, linetype="dashed")
p+scale_shape_manual(values=seq(21,25,1))
dev.off()
png("cc_interact_30_2k_TEST.png")
dev.off
dev.off()
png("cc_interact_30_2k_TEST_2.png")
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue') +
geom_hline(yintercept=8.5) +
geom_hline(yintercept=14.5, linetype="dashed")
dev.off()
dev.off()
png("cc_interact_30_2k_TEST_2.png")
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue') +
geom_hline(yintercept=8.5) +
geom_hline(yintercept=14.5, linetype="dashed")
dev.off()
png("cc_interact_30_2k_TEST_2.png")
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue') 
p
dev.off()
png("cc_interact_30_2k_TEST_3.png")
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue') 
p + geom_hline(yintercept=8.5) 
dev.off()
png("cc_interact_30_2k_TEST_3.png")
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue') 
p + geom_hline(yintercept=8.5) 
p + geom_hline(yintercept=14.5, linetype="dashed")
p
dev.off()
png("cc_interact_30_2k_TEST_4.png")
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue') 
p + geom_hline(yintercept=8.5) 
p + geom_hline(yintercept=14.5, linetype="dashed")
dev.off()
png("cc_interact_30_2k_TEST_5.png")
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue') 
p + geom_hline(yintercept=14.5, linetype="dashed") +
geom_hline(yintercept=14.5, linetype="dashed")
dev.off()
png("cc_interact_30_2k_TEST_6.png")
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue') +
geom_hline(yintercept=14.5, linetype="dashed") +
p + geom_hline(yintercept=8.5) 
geom_hline(yintercept=8.5) 
dev.off()\
dev.off()
dev.off()
png("cc_interact_30_2k_TEST_6.png")
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue') 
p + geom_hline(yintercept=8.5) 
dev.off()
png("cc_interact_30_2k_TEST_7.png")
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue') 
p + geom_hline(yintercept=8.5) +
geom_hline(yintercept=14.5, linetype="dashed") 
dev.off()
png("cc_interact_30_2k_TEST_8.png")
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue') 
p + geom_hline(yintercept=8.5) +
geom_hline(yintercept=14.5, linetype="dashed") 
scale_shape_manual(values=seq(21,25,1))
dev.off()
png("cc_interact_30_2k_TEST_9.png")
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue') 
p + geom_hline(yintercept=8.5) +
geom_hline(yintercept=14.5, linetype="dashed") +
scale_shape_manual(values=seq(21,25,1))
dev.off()
png("cc_interact_30_2k_TEST_10.png", res=600)
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue') 
p + geom_hline(yintercept=8.5) +
geom_hline(yintercept=14.5, linetype="dashed") +
scale_shape_manual(values=seq(21,25,1))
dev.off()
png("cc_interact_30_2k_TEST_10.png", dpi=600)
png("cc_interact_30_2k_TEST_11.png", width=4, height=5, units='in', res=600)
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue') 
p
dev.off()
png("cc_interact_30_2k_TEST_12.png", width=5, height=5, units='in', res=600)
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue') 
p
dev.off()
png("cc_interact_30_2k_TEST_13.png", width=3, height=3, units='in', res=600)
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue') 
p
dev.off()
png("cc_interact_30_2k_TEST_14.png", width=8, height=8, units='in', res=600)
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue') 
p
dev.off()
png("cc_interact_30_2k_TEST_15.png", width=8, height=8, units='in', res=600)
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue') 
p + geom_hline(yintercept=8.5) +
geom_hline(yintercept=14.5, linetype="dashed") +
scale_shape_manual(values=seq(21,25,1))
dev.off()
png("cc_interact_30_2k_FINAL.png", width=8, height=8, units='in', res=600)
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue') 
p + geom_hline(yintercept=8.5) +
geom_hline(yintercept=14.5, linetype="dashed") +
scale_shape_manual(values=seq(21,25,1))
dev.off()
png("cc_interact_30_2k_FINAL.png", width=8, height=8, units='in', res=600)
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue') 
p + geom_hline(yintercept=8.5) +
geom_hline(yintercept=14.5, linetype="dashed") +
ggtitle("Avg. Power (MAF 30%)") +
scale_shape_manual(values=seq(21,25,1))
dev.off()
cc_interact <- read.table("MAF5_2000_CC1_BL25_Interacting.txt", header=T)
png("cc_interact_MAF5_2000_TEST.png", width=8, height=8, units='in', res=600)
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue') 
p + geom_hline(yintercept=8.5) +
geom_hline(yintercept=14.5, linetype="dashed") +
ggtitle("Avg. Power (MAF 5%)") +
scale_x_continuous(limits=c(0,1)) +
scale_shape_manual(values=seq(21,25,1))
dev.off()
cc_interact$Encoding <- as.factor(cc_interact$Encoding)
 cc_interact$Encoding <- factor(cc_interact$Encoding, levels(cc_interact$Encoding[c(1,3,4,2,5)]))
cc_interact$Model <- factor(cc_interact$Model, levels(cc_interact$Model)[rev(c(19, 20, 16, 26, 17, 4, 1, 23, 22, 27, 28, 6, 2, 24, 5, 18, 11, 3, 25, 9, 10, 14, 13, 12, 8, 7, 15, 21, 29))])
png("cc_interact_MAF5_2000_TEST.png", width=8, height=8, units='in', res=600)
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue') 
p + geom_hline(yintercept=8.5) +
geom_hline(yintercept=14.5, linetype="dashed") +
ggtitle("Avg. Power (MAF 5%)") +
scale_x_continuous(limits=c(0,1)) +
scale_shape_manual(values=seq(21,25,1))
dev.off()
png("cc_interact_MAF5_2k_FINAL.png", width=8, height=8, units='in', res=600)
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue') 
p + geom_hline(yintercept=8.5) +
scale_x_continuous(limits=c(0,1)) +
scale_shape_manual(values=seq(21,25,1))
dev.off()
png("cc_interact_MAF5_2k_FINAL.png", width=8, height=8, units='in', res=600)
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue') 
p + geom_hline(yintercept=8.5) +
geom_hline(yintercept=14.5, linetype="dashed") +
ggtitle("Avg. Power (MAF 5%)") +
scale_x_continuous(limits=c(0,1)) +
scale_shape_manual(values=seq(21,25,1))
dev.off()
png("cc_interact_MAF5_2k_FINAL.png", width=8, height=8, units='in', res=600)
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue') 
p + geom_hline(yintercept=8.5) +
geom_hline(yintercept=14.5, linetype="dashed") +
ggtitle("Power (MAF 5%)") +
scale_x_continuous(limits=c(0,1)) +
scale_shape_manual(values=seq(21,25,1))
dev.off()
cc_interact <- read.table("MAF30_2000_CC1_BL25_Interacting.txt", header=T)
cc_interact$Encoding <- as.factor(cc_interact$Encoding)
 cc_interact$Encoding <- factor(cc_interact$Encoding, levels(cc_interact$Encoding[c(1,3,4,2,5)]))
cc_interact$Model <- factor(cc_interact$Model, levels(cc_interact$Model)[rev(c(19, 20, 16, 26, 17, 4, 1, 23, 22, 27, 28, 6, 2, 24, 5, 18, 11, 3, 25, 9, 10, 14, 13, 12, 8, 7, 15, 21, 29))])
png("cc_interact_MAF30_2k_FINAL.png", width=8, height=8, units='in', res=600)
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue') 
p + geom_hline(yintercept=8.5) +
geom_hline(yintercept=14.5, linetype="dashed") +
ggtitle("Power (MAF 30%)") +
scale_x_continuous(limits=c(0,1)) +
scale_shape_manual(values=seq(21,25,1))
dev.off()
 cc_interact$Encoding <- factor(cc_interact$Encoding, levels(cc_interact$Encoding)[c(1,3,4,2,5)]))
 cc_interact$Encoding <- factor(cc_interact$Encoding, levels(cc_interact$Encoding)[c(1,3,4,2,5)])
png("cc_interact_MAF30_2k_FINAL.png", width=8, height=8, units='in', res=600)
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue') 
p + geom_hline(yintercept=8.5) +
geom_hline(yintercept=14.5, linetype="dashed") +
ggtitle("Power (MAF 30%)") +
scale_x_continuous(limits=c(0,1)) +
scale_shape_manual(values=seq(21,25,1))
dev.off()
cc_interact <- read.table("MAF10_2000_CC1_BL25_Interacting.txt", header=T)
cc_interact$Encoding <- as.factor(cc_interact$Encoding)
 cc_interact$Encoding <- factor(cc_interact$Encoding, levels(cc_interact$Encoding)[c(1,3,4,2,5)])
cc_interact$Model <- factor(cc_interact$Model, levels(cc_interact$Model)[rev(c(19, 20, 16, 26, 17, 4, 1, 23, 22, 27, 28, 6, 2, 24, 5, 18, 11, 3, 25, 9, 10, 14, 13, 12, 8, 7, 15, 21, 29))])
png("cc_interact_MAF10_2K_TEST.png", width=8, height=8, units='in', res=600)
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue') 
p + geom_hline(yintercept=8.5) +
geom_hline(yintercept=14.5, linetype="dashed") +
ggtitle("Power (MAF 10%)") +
scale_shape_manual(values=seq(21,25,1))
dev.off()
cc_interact <- read.table("MAF50_2000_CC1_BL25_Interacting.txt", header=T)
cc_interact$Encoding <- as.factor(cc_interact$Encoding)
 cc_interact$Encoding <- factor(cc_interact$Encoding, levels(cc_interact$Encoding)[c(1,3,4,2,5)])
cc_interact$Model <- factor(cc_interact$Model, levels(cc_interact$Model)[rev(c(19, 20, 16, 26, 17, 4, 1, 23, 22, 27, 28, 6, 2, 24, 5, 18, 11, 3, 25, 9, 10, 14, 13, 12, 8, 7, 15, 21, 29))])
png("cc_interact_MAF50_2K_TEST.png", width=8, height=8, units='in', res=600)
p <-ggplot(cc_interact, aes(x=Power, y=Model, color=Encoding, shape=Encoding, fill=Encoding)) + geom_point() + geom_vline(xintercept=0.05, color='red') + geom_vline(xintercept=0.8, color='blue') 
p + geom_hline(yintercept=8.5) +
geom_hline(yintercept=14.5, linetype="dashed") +
ggtitle("Power (MAF 50%)") +
scale_shape_manual(values=seq(21,25,1))
dev.off()
q()
